<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.upc.demosys.dao.PunishmentMapper" >
  <resultMap id="BaseResultMap" type="com.upc.demosys.model.Punishment" >
    <constructor >
      <idArg column="p_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="p_date" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="p_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="p_institute" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.upc.demosys.model.Punishment" >
    <constructor >
      <idArg column="p_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="p_date" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="p_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="p_institute" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="p_reason" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    p_id, p_date, p_name, p_institute
  </sql>
  <sql id="Blob_Column_List" >
    p_reason
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from punishment
    where p_id = #{pId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from punishment
    where p_id = #{pId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.upc.demosys.model.Punishment" >
    insert into punishment (p_id, p_date, p_name, 
      p_institute, p_reason)
    values (#{pId,jdbcType=VARCHAR}, #{pDate,jdbcType=DATE}, #{pName,jdbcType=VARCHAR}, 
      #{pInstitute,jdbcType=VARCHAR}, #{pReason,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.upc.demosys.model.Punishment" >
    insert into punishment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pId != null" >
        p_id,
      </if>
      <if test="pDate != null" >
        p_date,
      </if>
      <if test="pName != null" >
        p_name,
      </if>
      <if test="pInstitute != null" >
        p_institute,
      </if>
      <if test="pReason != null" >
        p_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pId != null" >
        #{pId,jdbcType=VARCHAR},
      </if>
      <if test="pDate != null" >
        #{pDate,jdbcType=DATE},
      </if>
      <if test="pName != null" >
        #{pName,jdbcType=VARCHAR},
      </if>
      <if test="pInstitute != null" >
        #{pInstitute,jdbcType=VARCHAR},
      </if>
      <if test="pReason != null" >
        #{pReason,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.upc.demosys.model.Punishment" >
    update punishment
    <set >
      <if test="pDate != null" >
        p_date = #{pDate,jdbcType=DATE},
      </if>
      <if test="pName != null" >
        p_name = #{pName,jdbcType=VARCHAR},
      </if>
      <if test="pInstitute != null" >
        p_institute = #{pInstitute,jdbcType=VARCHAR},
      </if>
      <if test="pReason != null" >
        p_reason = #{pReason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where p_id = #{pId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.upc.demosys.model.Punishment" >
    update punishment
    set p_date = #{pDate,jdbcType=DATE},
      p_name = #{pName,jdbcType=VARCHAR},
      p_institute = #{pInstitute,jdbcType=VARCHAR},
      p_reason = #{pReason,jdbcType=LONGVARCHAR}
    where p_id = #{pId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.upc.demosys.model.Punishment" >
    update punishment
    set p_date = #{pDate,jdbcType=DATE},
      p_name = #{pName,jdbcType=VARCHAR},
      p_institute = #{pInstitute,jdbcType=VARCHAR}
    where p_id = #{pId,jdbcType=VARCHAR}
  </update>
</mapper>